@using GrizzTime.ViewModels
@model Employee

@{
    ViewBag.Title = "Add new employee";
    //Layout = null;
    string buscode = ViewBag.UserID;

    List<Employee> employees = Employee.EmployeeList(buscode);
    //employees.RemoveAll(x => x.UserID == Model.UserID); //remove this employee from possible supervisor list

    //convert employee list to selectlist
    List<SelectListItem> supervisorList = employees.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.EmpFName + " " + a.EmpLName,
            Value = a.UserID.ToString()
        };
    });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <br />
    <div class="row justify-content-center">
        <div class="col-md-6">

            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">Add New Employee</h3>
                </div>
                <div class="card-body">
                    <!-- Date dd/mm/yyyy -->
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>First Name:</label>

                                <div class="input-group">
                                    @Html.EditorFor(model => model.EmpFName, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmpFName, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.input group -->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Last Name:</label>

                                <div class="input-group">
                                    @Html.EditorFor(model => model.EmpLName, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmpLName, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.input group -->
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Email:</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                            </div>
                            @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                        </div>
                        <!-- /.input group -->
                    </div>
                    <!-- /.form group -->
                    <div class="form-group">
                        <label>Phone Number:</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-phone"></i></span>
                            </div>
                            @Html.EditorFor(model => model.EmpPhone, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmpPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Job Title:</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.EmpType, Employee.JobTypes, "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EmpType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Supervisor:</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.SupervisorID, supervisorList, "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SupervisorID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <input type="submit" value="Add" class="btn btn-lg btn-info" />
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
}

@*Displays alert message telling user how the operation went.*@
@if (@TempData["message"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
            alert(@TempData["message"]);
        };
    </script>
}
