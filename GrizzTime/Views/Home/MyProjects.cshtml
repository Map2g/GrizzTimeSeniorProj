@using GrizzTime.ViewModels
@model List<Project>

@{
    ViewBag.Title = "My Projects";
    bool isBusiness = ViewBag.isBusiness;

    HtmlString top = new HtmlString("");
    HtmlString bottom = new HtmlString("");
    //true when called from dashboard
    if (TempData["partial"] != null && TempData["partial"].Equals("True"))
    {
        Layout = null;
    }else
    {
        top = new HtmlString("<div class='container-fluid'><br><div class='row'><div class='col-12'><div class='card card-default'><div class='card-header'><div class='card-title'>My Projects</div></div><div class='card-body'>");
        bottom = new HtmlString("</div></div></div></div></div>");
    }
}

@Html.Raw(top)

<div class="row" style="padding-bottom:20px; @(isBusiness? "display:block" : "display:none")">
    <div class="col-lg-4">
        <a href="@Url.Action("Create", "Project")" class="btn btn-lg btn-primary">
            New Project
        </a>
    </div>
</div>

<table id="myPTable" class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th>
                @Html.DisplayName("Contract")
            </th>
            <th>
                @Html.DisplayName("Description")
            </th>
            <th>
                @Html.DisplayName("Project Manager")
            </th>
            <th>
                @Html.DisplayName("Start Date")
            </th>
            <th>
                @Html.DisplayName("End Date")
            </th>
            <th>
                @Html.DisplayName("Status")
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProjName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContractName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjManName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjStartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjEndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjStatus)
            </td>
            <td>
                @*Link name, controller name, action method, route argument, html details*@
                @Html.ActionLink("Edit", "Edit", "Project", new { id = item.ProjID }, null) |
                @Html.ActionLink("Details", "Details", "Project", new { id = item.ProjID }, null)
            </td>
        </tr>
    }

</table>

@Html.Raw(bottom)

<script>
    $(document).ready(function () {
        $('#myPTable').dataTable
            (
                {
                    pageLength: 20,
                    lengthMenu: [[20, 50, 100, 150], [20, 50, 100, 150]]
                }
            );
    });
</script>
