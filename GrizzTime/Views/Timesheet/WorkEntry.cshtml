@using GrizzTime.ViewModels
@model WorkEntry

@{

    string DayOfWeek = ViewBag.DayOfWeek;
    bool IsChangeable = ViewBag.IsChangeable;

    if (IsChangeable)
    {
        ViewBag.Title = "Enter work for " + DayOfWeek;
    }
    else
    {
        ViewBag.Title = "View work for " + DayOfWeek;
    }


    List<Project> projlist_l = Employee.GetProjects(ViewBag.UserID);

    //convert project list to a select list
    List<SelectListItem> projectList = projlist_l.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.ProjName,
            Value = a.ProjID.ToString()
        };
    });

    bool isExist = ViewBag.IsExist;
    List<SelectListItem> taskList = new List<SelectListItem>();
    if (isExist)
    {
        List<GrizzTime.Models.task> tasklist_l = Model.possibleTasks;
        taskList = tasklist_l.ConvertAll(a =>
        {
            return new SelectListItem()
            {
                Text = a.TaskName,
                Value = a.TaskID.ToString()
            };
        });
        var selected = taskList.Where(x => x.Value == Model.TaskID.ToString()).First();
        selected.Selected = true;
    }

}

<title>Edit details for @DayOfWeek</title>

<link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">

@*<div class="modal fade" tabindex="-1" id="loginModal"
        data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    ×
                </button>*@
@* </div> *@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <br />
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">@DayOfWeek </h3>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label>Hours:</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.WorkHours, new { htmlAttributes = new { @class = "form-control", @type = "number", @step="0.01", @id = "workhours", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.WorkHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Project:</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.ProjID, projectList, "--Select--", new { @class = "form-control", @id = "projectlist", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.ProjID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Task:</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.TaskID, (isExist ? new SelectList(taskList, "Value", "Text") : new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text")), "--Select--", new { @id = "tasklist", @class = "form-control", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.TaskID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    @Html.Hidden("WorkDate", DayOfWeek)
                </div>
                <div class="card-footer" style=@(IsChangeable ? "display:block" : "display:none")>
                    <input type="submit" value="Save" class="btn btn-lg btn-info" style=@(IsChangeable ? "display:block" : "display:none") />
                </div>
            </div>
        </div>
    </div>

}

@*Displays alert message telling user how the operation went.*@
@if (TempData["message"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["message"]");
        };
    </script>
}


<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">

</script>
<script src="scripts/bootstrap.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#btnShowModal").click(function () {
            $("#loginModal").modal('show');
        });

        $("#btnHideModal").click(function () {
            $("#loginModal").modal('hide');
        });
    });

    $(document).ready(function () {
        $("#projectlist").change(function () {
            var pID = $(this).val();
            $.getJSON("/Timesheet/LoadTasksForProject/", { projId: pID },
                function (data) {
                    var select = $("#tasklist");
                    select.empty();
                    //select.append($('<option/>', {
                    //    value: 0,
                    //    text: "--Select--"
                    //}));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                });
        });
    });

    //Toggle readonly and disabled properties
    window.onload = function () {
        var myBool;
        myBool = "@ViewBag.IsChangeable.ToString()";

        if (myBool == "True") {
            document.getElementById('workhours').removeAttribute('readonly');
             document.getElementById('tasklist').removeAttribute("disabled");
             document.getElementById('projectlist').removeAttribute("disabled");
         }else{
            document.getElementById('workhours').setAttribute("readonly", "true");
             document.getElementById('tasklist').setAttribute("disabled", "true");
             document.getElementById('projectlist').setAttribute("disabled", "true");
         }
    }
</script>
