@model GrizzTime.ViewModels.Project

@*We get the employee list and contract list from here*@
@using GrizzTime.ViewModels


@{
    ViewBag.Title = "Create a new project";

    //Remove non-pms from list.
    List<Employee> employees = Employee.EmployeeList(ViewBag.UserID);
    employees.RemoveAll(x => x.EmpType != "Project Manager");

    //convert employee list to selectlist
    List<SelectListItem> pmList = employees.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.EmpFName + " " + a.EmpLName,
            Value = a.UserID.ToString()
        };
    });


}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <br />
    <div class="row justify-content-center">
        <div class="col-md-6">

            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">Create a New Project</h3>
                </div>
                <div class="card-body">
                    <!-- Date dd/mm/yyyy -->
                    <div class="form-group">
                        <label>Name:</label>

                        <div class="input-group">
                            @Html.EditorFor(model => model.ProjName, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProjName, "", new { @class = "text-danger" })
                        </div>
                        <!-- /.input group -->
                    </div>
                    <!-- /.form group -->
                    <div class="form-group">
                        <label>Description:</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.ProjDesc, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProjDesc, "", new { @class = "text-danger" })
                        </div>
                        <!-- /.input group -->
                    </div>
                    <!-- /.form group -->
                    <div class="form-group">
                        <label>Contract:</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.ConID, Contract.ContractList(ViewBag.UserID) as List<SelectListItem>, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Start Date:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.ProjStartDate, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.ProjStartDate, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.input group -->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>End Date:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.ProjEndDate, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProjEndDate, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.input group -->
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Project Manager:</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.ProjManID, (pmList.Any() ? new SelectList(pmList, "Value", "Text") : new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text")), "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProjManID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <input type="submit" value="Create" class="btn btn-lg btn-info" />
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
}
