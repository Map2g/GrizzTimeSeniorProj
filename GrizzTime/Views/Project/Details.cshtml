@model GrizzTime.ViewModels.Project

@*We get the employee list and contract list from here*@
@using GrizzTime.ViewModels

@{
    ViewBag.Title = "Project Details";
}

<h2>Details</h2>

<div class="form-horizontal">
    <h4>Project</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.ProjName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ProjName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjDesc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ProjDesc, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ProjStartDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjManName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ProjManName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            List of Employees:
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayName("Employee")
                    </th>
                    <th>
                        @Html.DisplayName("Role")
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Project.GetEmployees(Model.ProjID))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmpFName) @Html.DisplayFor(modelItem => item.EmpLName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmpType)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", "Employee", new { id = item.UserID }, null) |
                            @Html.ActionLink("Remove", "RemoveEmpFromProject", "Project", new { pid = Model.ProjID, eid = item.UserID }, null)
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>

</div>

@*Displays alert message telling user how the operation went.*@
@if (ViewBag.message != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@ViewBag.message");
        };
    </script>
}

<div>
    @Html.ActionLink("Back to List", "MyProjects", "Business")
</div>
