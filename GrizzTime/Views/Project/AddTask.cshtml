@model GrizzTime.Models.task
@using GrizzTime.ViewModels


@{
    //Temporary. I'd like to put this function directly in the edit form.

    ViewBag.Title = "Add task";
    int ProjID = ViewBag.ProjectID;
    List<SelectListItem> taskList = ViewBag.tasks;

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <br />
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">Add a Task</h3>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label>Task:</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.TaskName, taskList, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Billable Rate:</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.BillableRate, new { htmlAttributes = new { @class = "form-control", @type = "number", @step="0.01" } })
                            @Html.ValidationMessageFor(model => model.BillableRate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <input type="submit" value="Add" class="btn btn-lg btn-info" />
                    <a href="@Url.Action("Details", "Project", new {id = ProjID })" class="btn btn-lg btn-info">Done</a>
                </div>

            </div>
        </div>
    </div>
}

