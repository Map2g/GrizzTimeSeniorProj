@using GrizzTime.ViewModels
@model Business

@{
    //NOT USING THIS PAGE ANYMORE
    Layout = null;
}

<link rel="stylesheet" href="~/StyleSheet.css" />
<title>Create Business Account</title>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="Column-1">

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="Login-Box-Top">
                <div class="Form-Titles">Create a business account</div>
            </div>

            <div class="Form-Box-Container">
                <div class="Form-Box" style="margin-top:50px">

                    <div class="form-group">
                        <div class="label"> Email Address </div>
                        <div class="col-md-10">
                            @*htmlAttributes = new { @class = "form-control", @placeholder = "Your Email Here"*@
                            @Html.EditorFor(model => model.UserEmail, new { @type = "text" })
                            <br />
                            @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="label"> Password </div>
                        @*@Html.LabelFor(model => model.UserPW, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserPW, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            <br />
                            @Html.ValidationMessageFor(model => model.UserPW, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="label"> Confirm Password </div>
                        @*@Html.LabelFor(model => model.UserPW, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            <br />
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="label"> Name </div>
                        @*@Html.LabelFor(model => model.BusName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusName, new { htmlAttributes = new { @class = "form-control" } })
                            <br />
                            @Html.ValidationMessageFor(model => model.BusName, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="label"> Address </div>
                        @*@Html.LabelFor(model => model.BusAddress, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusAddress, new { htmlAttributes = new { @class = "form-control" } })
                            <br />
                            @Html.ValidationMessageFor(model => model.BusAddress, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="label"> Description </div>
                        @*@Html.LabelFor(model => model.BusDesc, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.BusDesc, new { htmlAttributes = new { @class = "form-control" } })
                            <br />
                            @Html.ValidationMessageFor(model => model.BusDesc, "", new { @class = "text-danger", @style = "color:lightpink; padding-left:20px;" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>

                    <div class="col-md-10">
                        <div class="smalltext">
                            <a href="/home/landingpage" style="color:white">Back to Home &raquo;</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@if (@TempData["message"] != null)
{
    <script type="text/javascript">
                window.onload = function () {
                    alert("@TempData["message"]");
                };
    </script>
}
