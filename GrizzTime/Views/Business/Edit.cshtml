@model GrizzTime.ViewModels.Business

@{
    ViewBag.Title = "Edit Business";
    Layout = null;
}

<link rel="stylesheet" href="~/StyleSheet.css" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="Login-Box-Top">
        <div class="Form-Titles">Edit Business</div>
    </div>

    <div class="Login-Box-Container">

        <div class="Login-Box">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.UserID)
                @Html.HiddenFor(model => model.UserStatus)

                <div class="form-group">
                    @*@Html.Label("Email Address:", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="label"> Email Address</div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.Label("Business Name:", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="label"> Business Name </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.Label("Address:", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="label"> Business Address </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.Label("Description:", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="label"> Description </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusDesc, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.BusDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>

                <div class="col-md-10">
                    <div class="smalltext">
                        <a href="@Url.Action("ResetPassword", "Business", new {id = Model.UserID })" style="color:white; text-decoration:none">
                            Reset password
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@*Displays alert message telling user how the operation went.*@
@if (@TempData["message"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["message"]");
        };
    </script>
}
